<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form02" classname="Work" inheritanceid="" titletext="엑셀 import/export" left="0" width="1050" top="0" height="818" onload="Form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" text="" left="0" top="0" width="" height="52" right="0" bottom="">
          <Layouts>
            <Layout>
              <Button id="btnSearch" taborder="2" text="조회" top="8" width="89" height="34" right="20" onclick="divSearch_btnSearch_onclick"/>
            </Layout>
          </Layouts>
        </Div>
        <Grid id="Grid00" taborder="0" left="0" top="50" height="444" right="20" binddataset="dsList" autofittype="col" no="true">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="112"/>
                <Column size="80"/>
                <Column size="80"/>
                <Column size="80"/>
                <Column size="80"/>
                <Column size="80"/>
                <Column size="80"/>
              </Columns>
              <Rows>
                <Row size="30" band="head"/>
                <Row size="30"/>
              </Rows>
              <Band id="head">
                <Cell text="communityId"/>
                <Cell col="1" text="contents"/>
                <Cell col="2" text="hitCount"/>
                <Cell col="3" text="postId"/>
                <Cell col="4" text="regDate"/>
                <Cell col="5" text="regId"/>
                <Cell col="6" text="title"/>
              </Band>
              <Band id="body">
                <Cell text="bind:communityId"/>
                <Cell col="1" text="bind:contents"/>
                <Cell col="2" text="bind:hitCount"/>
                <Cell col="3" text="bind:postId"/>
                <Cell col="4" text="bind:regDate"/>
                <Cell col="5" text="bind:regId"/>
                <Cell col="6" text="bind:title"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btnExcelEx" taborder="2" text="excel export" left="0" top="508" width="90" height="34" right="" bottom="" onclick="btnExcelEx_onclick"/>
        <Button id="btnExcelImport" taborder="2" text="excel import" left="96" top="508" width="90" height="34" right="" bottom="" onclick="btnExcelImport_onclick"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList">
        <ColumnInfo>
          <Column id="communityId" type="string" size="32"/>
          <Column id="contents" type="string" size="32"/>
          <Column id="hitCount" type="string" size="32"/>
          <Column id="postId" type="string" size="32"/>
          <Column id="regDate" type="datetime" size="17"/>
          <Column id="regId" type="string" size="32"/>
          <Column id="searchCondition" type="string" size="32"/>
          <Column id="searchKeyword" type="string" size="32"/>
          <Column id="searchUseYn" type="string" size="32"/>
          <Column id="title" type="string" size="32"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind/>
    <Script type="xscript5.1"><![CDATA[this.svcurl = nexacro.getProjectPath();

this.fnSearch = function ()
 {
 	var strSvcId    = "search";
	var strSvcUrl   = "svcurl::selectDataListVO.do";
	var inData      = "";
	var outData     = "dsList=output1";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	//생략가능
	var isAsync   = true;
	var nDataType = 0;
	
	this.transaction( strSvcId , strSvcUrl , inData , outData , strArg, callBackFnc, nDataType);
};

this.fnCallback = function(svcID,errorCode,errorMsg)
{
	switch(svcID)
	{
		case "search":
 			//trace(this.dsList.saveXML());
			break;
	}
};

this.fnImportCallback = function(importId)
{
	trace(this.dsList.saveXML());
};

this.divSearch_btnSearch_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fnSearch();
};

this.btnExcelEx_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.exportExcel(this.Grid00);
};

this.btnExcelImport_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var range = "Head=!A1:G1;Body=!A2";
	var dataset = "dsList";
	var onsuccess = this.fnImportCallback;
	this.importExcel(range, dataset, onsuccess);
};

/**
 * 엑셀 다운로드
 * @param  {Grid} grid Grid component
 */
this.exportExcel = function(grid, onsuccess, onprogress)
{
    var exportFileName = (new Date()).getTime();
	var selecttype = grid.selecttype;
	
    grid.set_selecttype("row");
    if (Eco.isEmpty(this.exportObj))
    {
        this.exportObj = new ExcelExportObject();

        onsuccess && this.exportObj.addEventHandler("onsuccess", this.exportObj_onsuccess, this);
        onprogress && this.exportObj.addEventHandler("onerror", this.exportObj_onprogress, this);

        this.exportObj.set_exportmessageprocess("%d [ %d / %d ]");
        this.exportObj.set_exportuitype("exportprogress");
        this.exportObj.set_exporteventtype("itemrecord");
        this.exportObj.set_exporttype(nexacro.ExportTypes.EXCEL2007);
        this.exportObj.set_exportactivemode("active");
    }
    else
    {
        this.exportObj.clear();
    }

    //var ret = this.exportObj.addExportItem(nexacro.ExportItemTypes.GRID, grid, "Sheet1!A1", "allband", "allrecord", "", "allstyle", "", "color,background,font,cellline");
    var ret = this.exportObj.addExportItem(nexacro.ExportItemTypes.GRID, grid, "Sheet1!A1", "allband", "allrecord", "", "allstyle", "", "","", "");

    this.exportObj.set_exportfilename(exportFileName);
    this.exportObj.set_exporturl("xeniurl::XExportImport");
    this.exportObj.exportData();
	
    grid.set_selecttype(selecttype);
};

/**
 * 엑셀 업로드
 * @param  {Grid} grid Grid component
 */
this.importExcel = function(range, dataset, onsuccess, onerror)
{
    if (Eco.isEmpty(this.importObj))
    {
        this.importObj = new nexacro.ExcelImportObject("Import00", this);
        this.importObj.set_importtype(nexacro.ImportTypes.EXCEL);
        onsuccess && this.importObj.addEventHandler("onsuccess", this.importObj_onsuccess, this);
        onerror && this.importObj.addEventHandler("onerror", this.importObj_onerror, this);
    }

    this.importObj.set_importurl("xeniurl::XExportImport");
    this.importObj.importData("", "[command=getsheetdata;output=outDs;" + range + "]", "[" + dataset + "=outDs]");
}]]></Script>
  </Form>
</FDL>
